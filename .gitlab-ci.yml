before_script:
  - export VERSION="0.0.1"

build:
  image: node:latest
  stage: build
  script:
    - rm -f /etc/apt/apt.conf.d/docker-clean
    - mkdir -p .apt && mkdir -p /var/cache/apt/archives && mount --bind .apt /var/cache/apt/archives/
    - export DEBIAN_FRONTEND="noninteractive"
    #  -o dir::cache::archives="apt-cache"
    - apt-get -yqq -o Dpkg::Use-Pty=0 update
    - apt-get -yqq -o Dpkg::Use-Pty=0 install apt-utils
    - apt-get -yqq -o Dpkg::Use-Pty=0 upgrade
    - apt-get -yqq -o Dpkg::Use-Pty=0 install libwebkit2gtk-4.0-dev build-essential libgtk-3-dev libappindicator3-dev patchelf patchelf fuse appstream
    - sh ./rustup-init.sh -y
    - source $HOME/.cargo/env
    - rustc --version
    - yarn install
    # - yarn audit
    - yarn tauri info
    - ls /var/cache/apt/ -la
    - yarn build
  cache:
    paths:
      - .apt
      - node_modules/
      - packages/src-renderer/node_modules/
      - packages/src-tauri/target
      - /usr/local/cargo/registry
  artifacts:
    public: true
    paths:
      - packages/src-renderer/dist/
      - packages/src-tauri/target/release/bundle/deb/*.deb
      - packages/src-tauri/target/release/bundle/appimage/*amd64.AppImage

pages:
  image: alpine:latest
  stage: test
  needs:
    - job: build
      artifacts: true
  script:
    - mkdir -p public
    - cp -r packages/src-renderer/dist/* public
    - sed -i -E "s/(=\"\/assets)/=\".\/assets/" public/index.html
    - sed -i -E "s/(=\"\/assets)/=\".\/assets/" public/assets/*.js
  artifacts:
    paths:
      - public

